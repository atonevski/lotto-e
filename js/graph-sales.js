// Generated by CoffeeScript 1.10.0
var HEIGHT, WIDTH, https, lq, margins, plot, recs, utils;

utils = require('../js/utils.js');

https = require('https');

WIDTH = 800;

HEIGHT = 500;

margins = {
  top: 20,
  right: 80,
  bottom: 20,
  left: 80
};

recs = [];

lq = 'SELECT\n  A, B,\n  C, D, N, S,\n  AF, AG, AS, AY';

https.get(utils.qstring(lq), (function(_this) {
  return function(res) {
    var body;
    body = '';
    res.setEncoding('utf-8');
    res.on('data', function(d) {
      return body += d;
    });
    res.on('error', function(e) {
      return console.log("query error: " + e);
    });
    return res.on('end', function() {
      var days, i, json, len, r;
      json = utils.parseResponse(body);
      recs = utils.qresult(json);
      for (i = 0, len = recs.length; i < len; i++) {
        r = recs[i];
        days = r.date.getDay() === 0 ? 6 : r.date.getDay() - 1;
        r.monday = new Date(r.date);
        r.monday.setDate(r.date.getDate() - days);
      }
      return plot();
    });
  };
})(this));

plot = function() {
  var color, lnvals, lnvalsj, r, ref, satData, saturdays, svg, wedData, wednesdays, xAxis, xRange, xmax, xmin, yAxis, yAxisj, yRange, yRangej, ymax, ymaxj, ymin, yminj;
  color = d3.scaleOrdinal(d3.schemeCategory10);
  wednesdays = (function() {
    var i, len, results;
    results = [];
    for (i = 0, len = recs.length; i < len; i++) {
      r = recs[i];
      if (r.date.getDay() === 3) {
        results.push(r);
      }
    }
    return results;
  })();
  saturdays = (function() {
    var i, len, results;
    results = [];
    for (i = 0, len = recs.length; i < len; i++) {
      r = recs[i];
      if (r.date.getDay() === 6) {
        results.push(r);
      }
    }
    return results;
  })();
  wedData = wednesdays.slice(-50);
  satData = saturdays.slice(-50);
  svg = d3.select('.container').append('svg').attr('class', 'axis').attr('width', WIDTH).attr('height', HEIGHT);
  ref = [wedData[0].monday, wedData.slice(-1)[0].monday], xmin = ref[0], xmax = ref[1];
  xRange = d3.scaleTime().range([margins.left, WIDTH - margins.right]).domain([xmin, xmax]);
  ymin = d3.min([
    d3.min(wedData, function(d) {
      return d.lsales;
    }), d3.min(satData, function(d) {
      return d.lsales;
    })
  ]);
  ymax = d3.max([
    d3.max(wedData, function(d) {
      return d.lsales;
    }), d3.max(satData, function(d) {
      return d.lsales;
    })
  ]);
  yminj = d3.min([
    d3.min(wedData, function(d) {
      return d.jsales;
    }), d3.min(satData, function(d) {
      return d.jsales;
    })
  ]);
  ymaxj = d3.max([
    d3.max(wedData, function(d) {
      return d.jsales;
    }), d3.max(satData, function(d) {
      return d.jsales;
    })
  ]);
  console.log([ymin, ymax]);
  console.log(wednesdays.reverse().slice(0, 50).reverse());
  yRange = d3.scaleLinear().range([HEIGHT - margins.top, margins.bottom]).domain([ymin, ymax]);
  yRangej = d3.scaleLinear().range([HEIGHT - margins.top, margins.bottom]).domain([yminj, ymaxj]);
  xAxis = d3.axisBottom(xRange).tickFormat(d3.timeFormat("%W/%Y"));
  yAxis = d3.axisLeft(yRange);
  yAxisj = d3.axisRight(yRangej);
  svg.append('g').attr('class', 'x axis').attr('transform', "translate(0, " + (HEIGHT - margins.bottom) + ")").call(xAxis);
  svg.append('g').attr('class', 'y axis').attr('transform', "translate(" + margins.left + ", 0)").call(yAxis);
  svg.append('g').attr('class', 'y axis').attr('transform', "translate(" + (WIDTH - margins.right) + ", 0)").call(yAxisj);
  lnvals = d3.line().x(function(d) {
    return xRange(d.monday);
  }).y(function(d) {
    return yRange(d.lsales);
  }).curve(d3.curveCardinal);
  lnvalsj = d3.line().x(function(d) {
    return xRange(d.monday);
  }).y(function(d) {
    return yRangej(d.jsales);
  }).curve(d3.curveCardinal);
  svg.append('path').data([wedData]).attr('class', 'line').attr('d', lnvals).style('stroke', color(0));
  return svg.append('path').data([satData]).attr('class', 'sat-line').attr('d', lnvals).style('stroke', color(1));
};
